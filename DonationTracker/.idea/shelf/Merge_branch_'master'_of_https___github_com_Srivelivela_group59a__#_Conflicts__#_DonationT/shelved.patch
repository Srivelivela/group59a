Index: app/src/androidTest/java/com/example/hyejingracelim/donationtracker/UserTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/androidTest/java/com/example/hyejingracelim/donationtracker/UserTest.java	(date 1542160521000)
+++ app/src/androidTest/java/com/example/hyejingracelim/donationtracker/UserTest.java	(date 1542160521000)
@@ -0,0 +1,16 @@
+package com.example.hyejingracelim.donationtracker;
+
+import org.junit.Test;
+
+import static org.junit.Assert.*;
+
+public class UserTest {
+
+    @Test
+    public void getName() {
+        User user = new User("", "mail@a.com", "123123");
+        assertEquals("", user.getName());
+        User user1 = new User("jinwoo", "", "");
+        assertEquals("jinwoo", user1.getName());
+    }
+}
\ No newline at end of file
Index: app/src/main/java/com/example/hyejingracelim/donationtracker/LoadFileActivity.java
===================================================================
--- app/src/main/java/com/example/hyejingracelim/donationtracker/LoadFileActivity.java	(date 1542160468000)
+++ app/src/main/java/com/example/hyejingracelim/donationtracker/LoadFileActivity.java	(date 1542160468000)
@@ -1,91 +0,0 @@
-package com.example.hyejingracelim.donationtracker;
-
-import android.app.ProgressDialog;
-import android.content.Intent;
-import android.os.Bundle;
-import android.support.v7.app.AppCompatActivity;
-import android.view.View;
-import android.widget.ArrayAdapter;
-import android.widget.Button;
-import android.widget.EditText;
-import android.widget.LinearLayout;
-import android.widget.Spinner;
-import com.google.firebase.auth.FirebaseAuth;
-
-import java.util.HashMap;
-import java.util.List;
-
-public class LoadFileActivity extends AppCompatActivity {
-    List<String[]> loadedData;
-    String key, locationName, locationType, address, city, state, latitude, longitude, zipCode, phone, website;
-
-    @Override
-    protected void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-        setContentView(R.layout.activity_loadfile);
-        readFile.readData("LocationData.csv");        //static method call for readFile class
-                                                           //to store data from the file stated in parameters
-    }
-
-
-    public void loadClick(View view) {
-        Button button = (Button) view;
-        button.setVisibility(View.GONE);                   //If load data button is clicked, the button disappears from memory AND from view.
-        loadedData = readFile.getData();                   //Retrieves the loaded data from file onto the list
-        HashMap<String, Integer> loaded = new HashMap<>();
-        for (int i = 0; i < loadedData.size(); i++) {      //There are 12 elements for each Location in the file, so I want to get the correct element
-                                                           //for each variable, so I scan through the list making sure I put in the right variable the element of the right place in the List.
-            for (int j = 0; j < 11; j++) {
-                switch (j) {
-                    case 0:
-                        key = loadedData.get(i + j).toString();
-                        loaded.put(key, i + j);
-                        break;
-                    case 1:
-                        locationName = loadedData.get(i + j).toString();
-                        loaded.put(locationName, i + j);
-                        break;
-                    case 2:
-                        latitude = loadedData.get(i + j).toString();
-                        loaded.put(latitude, i + j);
-                        break;
-                    case 3:
-                        longitude = loadedData.get(i + j).toString();
-                        loaded.put(longitude, i + j);
-                        break;
-                    case 4:
-                        address = loadedData.get(i + j).toString();
-                        loaded.put(address, i + j);
-                        break;
-                    case 5:
-                        city = loadedData.get(i + j).toString();
-                        loaded.put(city, i + j);
-                        break;
-                    case 6:
-                        state = loadedData.get(i + j).toString();
-                        loaded.put(state, i + j);
-                        break;
-                    case 7:
-                        zipCode = loadedData.get(i + j).toString();
-                        loaded.put(zipCode, i + j);
-                        break;
-                    case 8:
-                        locationType = loadedData.get(i + j).toString();
-                        loaded.put(locationType, i + j);
-                        break;
-                    case 9:
-                        phone = loadedData.get(i + j).toString();
-                        loaded.put(phone, i + j);
-                        break;
-                    case 10:
-                        website = loadedData.get(i + j).toString();
-                        loaded.put(website, i + j);
-                        break;
-                    default:
-                        break;
-                }
-            }
-        }
-
-    }
-}
Index: app/src/main/java/com/example/hyejingracelim/donationtracker/readFile.java
===================================================================
--- app/src/main/java/com/example/hyejingracelim/donationtracker/readFile.java	(date 1542160468000)
+++ app/src/main/java/com/example/hyejingracelim/donationtracker/readFile.java	(date 1542160468000)
@@ -1,109 +0,0 @@
-package com.example.hyejingracelim.donationtracker;
-
-import android.util.Log;
-
-import com.opencsv.CSVReader;
-import com.opencsv.CSVReaderBuilder;
-
-import java.io.File;
-import java.io.FileNotFoundException;
-import java.io.FileReader;
-import java.io.IOException;
-import java.util.HashMap;
-import java.util.List;
-
-public class readFile {
-    private static List<String[]> data;
-    public static void readData(String file) {
-        try {
-            // Creates a filereader object
-            // class with CSV file used as a parameter.
-            FileReader fileReader = new FileReader(file);
-            // creates a csvReader object that passes filereader as the parameter
-            // skips the first two lines when reading the csv file
-            CSVReader csvReader = new CSVReaderBuilder(fileReader)
-                    .withSkipLines(2)
-                    .build();
-            data = csvReader.readAll();                 //Each element in list
-                                                        // has a separate String (separated by commas in the file)
-        }
-        catch (FileNotFoundException e) {
-            e.printStackTrace();                        //If there is a FileNotFoundException,
-        }                                               //it prints the reason of the exception.
-        catch (IOException e1) {
-            e1.printStackTrace();
-        }
-    }
-    public static List<String[]> getData() {
-        return data;
-    }
-
-    public static HashMap<String, Integer> getMap() {
-        readData("LocationData.csv");
-
-        HashMap<String, Integer> loaded = new HashMap<>();
-        String key, locationName, locationType, address, city, state, latitude, longitude, zipCode, phone, website;
-        int counter = -1;
-        for (int i = 0; i < data.size(); i = i + 11) {      //There are 12 elements for each Location in the file, so I want to get the correct element
-            //for each variable, so I scan through the list making sure I put in the right variable the element of the right place in the List.
-            counter++;
-            for (int j = 0; j < 11; j++) {
-                switch (j) {
-                    case 0:
-                        key = data.get(i + j).toString();
-                        loaded.put(key, i + counter);
-                        break;
-                    case 1:
-                        locationName = data.get(i + j).toString();
-                        loaded.put(locationName, i + counter);
-                        break;
-                    case 2:
-                        latitude = data.get(i + j).toString();
-                        loaded.put(latitude, i + counter);
-                        break;
-                    case 3:
-                        longitude = data.get(i + j).toString();
-                        loaded.put(longitude, i + counter);
-                        break;
-                    case 4:
-                        address = data.get(i + j).toString();
-                        loaded.put(address, i + counter);
-                        break;
-                    case 5:
-                        city = data.get(i + j).toString();
-                        loaded.put(city, i + counter);
-                        break;
-                    case 6:
-                        state = data.get(i + j).toString();
-                        loaded.put(state, i + counter);
-                        break;
-                    case 7:
-                        zipCode = data.get(i + j).toString();
-                        loaded.put(zipCode, i + counter);
-                        break;
-                    case 8:
-                        locationType = data.get(i + j).toString();
-                        loaded.put(locationType, i + counter);
-                        break;
-                    case 9:
-                        phone = data.get(i + j).toString();
-                        loaded.put(phone, i + counter);
-                        break;
-                    case 10:
-                        website = data.get(i + j).toString();
-                        loaded.put(website, i + counter);
-                        break;
-                    default:
-                        break;
-                }
-            }
-        }
-        /*for (HashMap.Entry<String, Integer> entry : loaded.entrySet()) {
-            Log.d("HASHMAP", entry.getKey() + " : " + entry.getValue());
-        }*/
-        return loaded;
-    }
-}
-
-
-
Index: app/src/test/java/com/example/hyejingracelim/donationtracker/UserTest.java
===================================================================
--- app/src/test/java/com/example/hyejingracelim/donationtracker/UserTest.java	(date 1542160468000)
+++ app/src/test/java/com/example/hyejingracelim/donationtracker/UserTest.java	(date 1542160468000)
@@ -1,21 +0,0 @@
-package com.example.hyejingracelim.donationtracker;
-
-import org.junit.Test;
-
-import static org.junit.Assert.*;
-/**
- * @version 11/8/18
- * @author group59a
- * Class that differentiates the different users that can log in
- * Stores information about different users
- */
-public class UserTest {
-
-    @Test
-    public void getNameTest() {
-        User user = new User("JinwooPlace", "1:00", "Place",
-                   "Jinwoo's place", "Atlanta", "small", "10000");
-        assertEquals("Test failed. Wrong name outputted.","JinwooPlace",
-                user.getName());
-    }
-}
\ No newline at end of file
Index: app/src/main/java/com/example/hyejingracelim/donationtracker/User.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.hyejingracelim.donationtracker;\n\n\nimport java.util.Arrays;\nimport java.util.List;\n\n/**\n * @version 11/8/18\n * @author group59a\n * Class that differentiates the different users that can log in\n * Stores information about different users\n */\npublic class User {\n    public static List<String> legalUsers = Arrays.asList(\"Guest\", \"Customer\", \"Admin\", \"Donator\", \"Branch Manager\",\n            \"Warehouse Employee\", \"Donation Recorder Employee\");\n\n    public static List<String> categories = Arrays.asList(\"Clothing\", \"Hat\", \"Electronics\", \"Kitchen\", \"Household\",\n            \"Other\");\n\n    public static List<String> locations = Arrays.asList(\"Location 1\", \"Location 2\", \"Location 3\", \"Location 4\", \"Location 5\",\n            \"Location 6\", \"ALL\");\n\n    private String _name;\n    private String _email;\n    private String _password;\n    private UserType _userType;\n\n    private String name;\n    private String time;\n    private String shortDescript;\n    private String fullDescript;\n    private String location_data;\n    private String category_data;\n    private String price;\n\n    public User(){\n\n    }\n\n    /**\n     *\n     * @param name     The name of a location.\n     * @param time     The time in which the location is registered.\n     * @param shortDescript   The short description of a location.\n     * @param fullDescript    The full description of a location.\n     * @param loc      The location data of a location.\n     * @param category The category of a location.\n     * @param price    The price of a location.\n     */\n    public User(String name, String time, String shortDescript, String fullDescript, String loc, String category, String price){\n        this.name = name;\n        this.time = time;\n        this.shortDescript = shortDescript;\n        this.fullDescript = fullDescript;\n        this.location_data = loc;\n        this.category_data = category;\n        this.price = price;\n    }\n    /**\n     * @return name\n     */\n    public String getName(){return _name;}\n    /**\n     * @return time\n     */\n    public String getTime() {return time;}\n\n    /**\n     * @return shortDescript\n     */\n    public String getShortDescription(){return shortDescript;}\n\n    /**\n     * @return fullDescript\n     */\n    public String getFullDescription(){return fullDescript;}\n\n    /**\n     * @return location_data\n     */\n    public String getLocation(){return location_data;}\n\n    /**\n     *\n     * @param location The email of a user.\n     */\n    public void setLocation(String location) { location_data = location; }\n\n    /**\n     * @return category_data\n     */\n    public String getCategory(){return category_data;}\n\n    /**\n     * @return price\n     */\n    public String getPrice(){return price; }\n\n    /**\n     *\n     * @return _name\n     */\n    public String getUserName() { return _name; }\n  //  public void setName(String name) { _name = name; }\n\n    /**\n     *\n     * @return _email\n     */\n    public String getEmail() { return _email; }\n\n    /**\n     *\n     * @param email The email of a user.\n     */\n    public void setEmail(String email) { _email = email; }\n\n    /**\n     *\n     * @return _password\n     */\n    public String getPassword() { return _password; }\n\n    /**\n     *\n     * @param password The password of a user.\n     */\n    public void setPassword(String password) { _password = password; }\n\n    /**\n     *\n     * @return _userType\n     */\n    public UserType getUserType() {return _userType;}\n\n    /**\n     *\n     * @param userType The userType of a user.\n     */\n    public void setUserType(UserType userType) {_userType = userType;}\n\n    /**\n     *  @param name The name of a user.\n     * @param email The email of a user.\n     * @param password The password of a user.\n     */\n    public User(String name, String email, String password) {\n        _name = name;\n        _email = email;\n        _password = password;\n        _userType = UserType.GUEST;\n    }\n\n    /**\n     * Converts user to string\n     * @return user as string\n     */\n    @Override\n    public String toString() {\n        if (_name != null) {\n            String returnUser =\"\";\n            returnUser = returnUser + \"Name: \";\n            returnUser = returnUser + _name;\n            if (location_data!=null) {\n                returnUser = returnUser + \" Location: \";\n                returnUser = returnUser + location_data;\n            }\n            if (_userType != null) {\n                returnUser = returnUser + \" User Type: \";\n                returnUser = returnUser + _userType;\n            }\n            return returnUser;\n        }\n        else {\n            return \"User not Found\";\n        }\n    }\n\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/hyejingracelim/donationtracker/User.java	(date 1542160468000)
+++ app/src/main/java/com/example/hyejingracelim/donationtracker/User.java	(date 1542160521000)
@@ -1,6 +1,8 @@
 package com.example.hyejingracelim.donationtracker;
 
 
+import android.support.annotation.NonNull;
+
 import java.util.Arrays;
 import java.util.List;
 
@@ -25,6 +27,7 @@
     private String _password;
     private UserType _userType;
 
+    @SuppressWarnings("FieldCanBeLocal")
     private String name;
     private String time;
     private String shortDescript;
@@ -59,7 +62,16 @@
     /**
      * @return name
      */
-    public String getName(){return _name;}
+    public String getName(){
+        String name1;
+        //noinspection ObjectEqualsNull,ConstantConditions
+        if (_name.equals("") || _name.equals(null)) {
+            return "";
+        } else {
+            name1 = _name;
+        }
+        return name1;
+    }
     /**
      * @return time
      */
@@ -155,6 +167,7 @@
      * Converts user to string
      * @return user as string
      */
+    @NonNull
     @Override
     public String toString() {
         if (_name != null) {
